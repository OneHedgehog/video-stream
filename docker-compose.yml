version: '3'
services:
  nginx-frontend:
    build:
      context: frontend/.docker/nginx
    volumes:
      - ./frontend:/var/www/frontend
      - ./frontend/docker/nginx/logs:/var/log/nginx
    ports:
      - "8000:8000"
  nodejs-frontend:
    stdin_open: true
    build:
      context: frontend/.docker/nodejs
    volumes:
      - ./frontend:/var/www/frontend
    environment:
      - npm_config_unsafe_perm=true
      #allow hot reload on docker volumes
      - CHOKIDAR_USEPOLLING=true
      #decrease CPU load
      - CHOKIDAR_INTERVAL=1000
      - CHOKIDAR_USE_FS_EVENTS=true
      - CHOKIDAR_IGNORE_PERMISSION_ERRORS=true
    working_dir: /var/www/frontend
    tty: true
    ports:
      - "4200:4200"
  nginx-backend-api:
    build:
      context: backend-api/auth-service/.docker/nginx
    volumes:
      - ./backend-api/auth-service:/var/www/backend-api/auth-service
      - ./backend-api/auth-service/.docker/nginx/logs:/var/log/nginx
    command: [nginx-debug, '-g', 'daemon off;']
    ports:
      - "8080:8080"
  php-backend-auth-api:
    build:
      context: backend-api/auth-service/.docker/php
    working_dir: /var/www/backend-api/auth-service
    volumes:
      - ./backend-api/auth-service:/var/www/backend-api/auth-service
    ports:
      - "9000:9000"
    environment:
      #unlimited
      - COMPOSER_MEMORY_LIMIT=-1
#  postgres-backend-api:
#    build:
#      context: backend-api/api/.docker/postgres
#    restart: always
#    ports:
#      #care, custom port for prevent conflict
#      - "5433:5432"
#    volumes:
#      -  ./backend-api/api/.docker/postgres/dbfiles:/var/lib/postgresql/data
#    environment:
#      POSTGRES_USER: video-stream-api
#      POSTGRES_PASSWORD: uVK4PBfdNBncWLbmZMKG
#      POSTGRES_DB: video-stream-api
